// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjetoVendas.Data;

#nullable disable

namespace ProjetoVendas.Migrations
{
    [DbContext(typeof(VendasDataContext))]
    [Migration("20241126012209_Primeira")]
    partial class Primeira
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProjetoVendas.Models.Carrinho", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorTotal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DECIMAL(18,2)")
                        .HasColumnName("ValorTotal")
                        .HasDefaultValueSql("0.00");

                    b.Property<int?>("VendaFinalId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Carrinho", (string)null);
                });

            modelBuilder.Entity("ProjetoVendas.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CarrinhoId")
                        .HasColumnType("int");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Cpf");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("Email");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasMaxLength(280)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("Endereco");

                    b.Property<string>("Fone")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Fone");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("Nome");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("Senha");

                    b.HasKey("Id");

                    b.HasIndex("CarrinhoId")
                        .IsUnique();

                    b.ToTable("Cliente", (string)null);
                });

            modelBuilder.Entity("ProjetoVendas.Models.Pagamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CodigoCartao")
                        .HasMaxLength(120)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("CodigoCartao");

                    b.Property<string>("CpfCliente")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("CpfCliente");

                    b.Property<string>("FormaPagamento")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("FormaPagamento");

                    b.Property<string>("NomeCliente")
                        .IsRequired()
                        .HasMaxLength(280)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("NomeCliente");

                    b.Property<string>("NumeroCartao")
                        .HasMaxLength(120)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("NumeroCartao");

                    b.Property<int>("VendaFinalId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Pagamento", (string)null);
                });

            modelBuilder.Entity("ProjetoVendas.Models.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CarrinhoId")
                        .HasColumnType("int");

                    b.Property<string>("Garantia")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("Garantia");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("Marca");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("Modelo");

                    b.Property<decimal>("Preco")
                        .HasColumnType("DECIMAL(18,2)")
                        .HasColumnName("Preco");

                    b.Property<string>("Serie")
                        .IsRequired()
                        .HasMaxLength(280)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("Serie");

                    b.Property<string>("TipoProduto")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("TipoProduto");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(280)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("Titulo");

                    b.HasKey("Id");

                    b.HasIndex("CarrinhoId");

                    b.ToTable("Produto", (string)null);
                });

            modelBuilder.Entity("ProjetoVendas.Models.ProdutoImagens", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ImagemUrl")
                        .IsRequired()
                        .HasMaxLength(280)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("ImagemUrl");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProdutoId");

                    b.ToTable("ProdutoImagens", (string)null);
                });

            modelBuilder.Entity("ProjetoVendas.Models.RelatorioVendas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("DECIMAL(18,2)")
                        .HasColumnName("ValorTotal");

                    b.Property<int>("VendaFinalId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VendaFinalId")
                        .IsUnique();

                    b.ToTable("RelatorioVendas", (string)null);
                });

            modelBuilder.Entity("ProjetoVendas.Models.VendaFinal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CarrinhoId")
                        .HasColumnType("int");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<int>("PagamentoId")
                        .HasColumnType("int");

                    b.Property<int>("RelatorioVendasId")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("DECIMAL(18,2)")
                        .HasColumnName("ValorTotal");

                    b.HasKey("Id");

                    b.HasIndex("CarrinhoId")
                        .IsUnique();

                    b.HasIndex("ClienteId");

                    b.HasIndex("PagamentoId")
                        .IsUnique();

                    b.ToTable("VendaFinal", (string)null);
                });

            modelBuilder.Entity("ProjetoVendas.Models.Cliente", b =>
                {
                    b.HasOne("ProjetoVendas.Models.Carrinho", "Carrinho")
                        .WithOne("Cliente")
                        .HasForeignKey("ProjetoVendas.Models.Cliente", "CarrinhoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_Cliente_Carrinho");

                    b.Navigation("Carrinho");
                });

            modelBuilder.Entity("ProjetoVendas.Models.Produto", b =>
                {
                    b.HasOne("ProjetoVendas.Models.Carrinho", "Carrinho")
                        .WithMany("Produtos")
                        .HasForeignKey("CarrinhoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .HasConstraintName("FK_Produto_Carrinho");

                    b.Navigation("Carrinho");
                });

            modelBuilder.Entity("ProjetoVendas.Models.ProdutoImagens", b =>
                {
                    b.HasOne("ProjetoVendas.Models.Produto", "Produto")
                        .WithMany("ProdutoImagens")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_ProdutoImagens_Produto");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("ProjetoVendas.Models.RelatorioVendas", b =>
                {
                    b.HasOne("ProjetoVendas.Models.VendaFinal", "VendaFinal")
                        .WithOne("RelatorioVendas")
                        .HasForeignKey("ProjetoVendas.Models.RelatorioVendas", "VendaFinalId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_RelatorioVendas_VendaFinal");

                    b.Navigation("VendaFinal");
                });

            modelBuilder.Entity("ProjetoVendas.Models.VendaFinal", b =>
                {
                    b.HasOne("ProjetoVendas.Models.Carrinho", "Carrinho")
                        .WithOne("VendaFinal")
                        .HasForeignKey("ProjetoVendas.Models.VendaFinal", "CarrinhoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_VendaFinal_Carrinho");

                    b.HasOne("ProjetoVendas.Models.Cliente", "Cliente")
                        .WithMany("ComprasConcluidas")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_VendaFinal_Cliente");

                    b.HasOne("ProjetoVendas.Models.Pagamento", "Pagamento")
                        .WithOne("VendaFinal")
                        .HasForeignKey("ProjetoVendas.Models.VendaFinal", "PagamentoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_VendaFinal_Pagamento");

                    b.Navigation("Carrinho");

                    b.Navigation("Cliente");

                    b.Navigation("Pagamento");
                });

            modelBuilder.Entity("ProjetoVendas.Models.Carrinho", b =>
                {
                    b.Navigation("Cliente")
                        .IsRequired();

                    b.Navigation("Produtos");

                    b.Navigation("VendaFinal");
                });

            modelBuilder.Entity("ProjetoVendas.Models.Cliente", b =>
                {
                    b.Navigation("ComprasConcluidas");
                });

            modelBuilder.Entity("ProjetoVendas.Models.Pagamento", b =>
                {
                    b.Navigation("VendaFinal")
                        .IsRequired();
                });

            modelBuilder.Entity("ProjetoVendas.Models.Produto", b =>
                {
                    b.Navigation("ProdutoImagens");
                });

            modelBuilder.Entity("ProjetoVendas.Models.VendaFinal", b =>
                {
                    b.Navigation("RelatorioVendas")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
